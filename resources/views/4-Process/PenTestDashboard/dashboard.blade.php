<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap.min.css"
        referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="{{ asset('/css/dashboard.css') }}">
    <title>Dashboard</title>
    <style>
        * {
            margin: 0em;
        }

        body {
            background-color: #E8EBF0;
        }

        .headersec {
            display: flex;
            justify-content: space-between;
            background: linear-gradient(to right, #203864, #2e74b6);
            padding: 6px 0px 5px 0px;
            margin: 0px 0px 15px 0px;
            width: 100%;
            height: 62px;
            z-index: 1;
        }

        .headerleft {
            display: flex;
            justify-content: left;
            margin: 0px 0px 0px 50px;
            color: white;
            font-weight: 800;
            align-items: center;

        }

        .headericon {
            font-size: 30px;
        }

        .headertext {
            font-size: 18px;
            line-height: 18px;
        }

        .headericon,
        .headertext {
            margin-right: 10px;
        }

        .button {
            background-color: black;
            color: white;
            padding: 0px 50px 0px 50px;
            margin: 0px 56px 0px 0px;
            border: solid 1px black;
            border-radius: 10px;
            transition: 0.3s;
            font-size: 12px;
            width: auto;
            height: 50px;
        }

        .button:hover {
            background-color: white;
            color: black;
        }

        .bodysec {
            margin-inline: 30px;
        }

        .graphrowone {
            display: flex;
            justify-content: space-between;
            /* margin-block: 10px; */
        }

        /* .grtcolumnone {
            margin-block: 10px;
        } */

        .chart-card {
            background-color: white;
            border-radius: 8px;
            border: 1px solid rgba(203, 208, 221, 0.54)
        }

        .abar {
            /* width: 580px;
            height: 150px;
            box-shadow: 0px 1px 6px 3px #c3c3c3;
            border-radius: 20px; */
            padding: 10px;
            /* color: #000000; */
            text-align: center;
        }

        .bchart {
            /* width: 290px;
            height: 150px;
            box-shadow: 0px 1px 6px 3px #c3c3c3;
            border-radius: 20px; */
            padding: 10px;
            /* color: #000000; */
            text-align: center;
        }

        .cchart {
            /* width: 250px;
            height: 150px;
            box-shadow: 0px 1px 6px 3px #c3c3c3;
            border-radius: 20px; */
            padding: 10px;
            /* color: #000000; */
            text-align: center;
        }

        .abar h4 {
            padding-bottom: 10px;
        }

        .dchart {
            /* width: 290px; */
            /* height: 150px; */
            /* box-shadow: 0px 1px 6px 3px #c3c3c3; */
            /* border-radius: 20px; */
            padding: 10px;
            /* color: #000000; */
            text-align: center;
            margin-block: 10px;
        }

        .echart {
            /* width: 171px; */
            /* height: 150px; */
            /* box-shadow: 0px 1px 6px 3px #c3c3c3; */
            /* border-radius: 20px; */
            padding: 10px;
            /* color: #000000; */
            text-align: center;
            margin-block: 10px;
        }

        .chartarea {
            display: flex;
            justify-content: center;
        }

        .grtcolumntwo {
            width: 60%;
            /* height: 328px; */
            /* box-shadow: 0px 1px 6px 3px #c3c3c3; */
            /* border-radius: 20px; */
            /* padding: 10px; */
            /* color: #000000; */
            text-align: center;
            /* margin-top: 21px; */
        }

        #ncaDomainChart {
            height: 280px !important;
        }

        #doughnutChart,
        #myPieChartTwo {
            height: 120px !important;
        }

        #gauge_one,
        #gauge_two {
            height: 115px !important;
        }
    </style>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

</head>

<body>
    <div class="headersec">
        <div class="headerleft">
            <div class="headericon">
                <a href="/compliance" class="text-white">

                    <i class='bx bx-home'></i>
                </a>
            </div>
            <div class="headertext">
                <p class="m-0">العمليات</p>
                <p class="m-0">Processes</p>
            </div>
            <div class="headericon">
                <i class='bx bx-right-arrow-alt'></i>
            </div>
            <div class="headertext">
                <p class="m-0">لوحة تحكم اختبار اختراق الثغرات الأمنية</p>
                <p class="m-0">VA Pen Test Dashboard</p>
            </div>
        </div>
        <div class="flex ">

            <a href="{{ route('pen-test-report', $vaPenTestId) }}"
                class="btn btn-info btn-turqouis btn-sm rounded rounded-5 text-black">
                <p class="m-0">تقرير مفصل</p>
                <p class="m-0">Detailed Report</p>
            </a>
            <button id="print" class="btn btn-info btn-turqouis btn-sm rounded rounded-5 text-black me-2"
                data-filename="VA Pen Test Dashboard">
                <p class="m-0">تنزيل بصيغة بي دي إف</p>
                <p class="m-0">Download as PDF</p>
            </button>
            <a href="{{ route('pen-test.generate.ppt', $vaPenTestId) }}" class="btn btn-info btn-turqouis btn-sm rounded rounded-5 text-black"
                data-filename="VA Pen Test Dashboard">
                <p class="m-0">تنزيل بصيغة بي بي تي</p>
                <p class="m-0">Download as PPT</p>
            </a>
        </div>
        <div class="d-flex align-items-center gap-3">
            @include('partials.roles')
            <div class="headerright">
                <button type="button" class="button" onclick="window.location.href=('/compliance')">
                    <span class="d-block">للخلف</span>
                    <span>Back</span>
                </button>
            </div>
        </div>
    </div>
    <section id="print-area">
        <div class="container-fluid">
            <div class="row">

                <div class="col-6">
                    <div class="card p-2">
                        <h4 class="fs-6 text-center">Vulnerability Penetration Test Status Distribution </h4>
                        <canvas id="vaPenTestStatus"></canvas>

                    </div>
                </div>
                <div class="col-6">
                    <div class="card p-2">
                        <h4 class="fs-6 text-center">Vulnerability Penetration Test Severity Distribution</h4>
                        <canvas id="severityChart"></canvas>
                    </div>
                </div>

            </div>
        </div>

    </section>

    <script src="https://cdn.jsdelivr.net/gh/emn178/chartjs-plugin-labels/src/chartjs-plugin-labels.js"></script>
    <script src="{{ asset('/js/dashboard.js') }}"></script>


    <!------------- ECC Compliance Status ---------------->


    <script>
        const vaPenTestStatus = @json($vaPenTestStatus);
        const labels = Object.keys(vaPenTestStatus);
        const statusData = Object.values(vaPenTestStatus);
        const statusesbackground = [
            "#FFC107",
            "#FF0000",
            "#228B22",
        ];

        // Create array of objects with value and status
        const dataWithStatus = statusData.map((value, index) => ({
            value: value,
            status: labels[index]
        }));

        new Chart("vaPenTestStatus", {
            type: "pie",
            data: {
                labels: labels,
                datasets: [{
                    backgroundColor: statusesbackground,
                    data: dataWithStatus.map(d => d.value),
                    customData: dataWithStatus.map(d => d.status)
                }]
            },
            options: {
                title: {
                    display: false,
                },
                legend: {
                    display: true,
                    position: 'left',
                    labels: {
                        render: 'label',
                    }
                },
                plugins: {
                    labels: {
                        render: 'percentage',
                        showZero: false,
                        fontSize: 20,
                        fontColor: '#fff',
                        arc: false,
                        position: 'border',
                    }
                },
                onClick: function(event, elements) {
                    if (elements && elements.length > 0) {
                        const index = elements[0]._index;
                        const status = this.data.datasets[0].customData[index];
                        window.location.href = `/va-pen-test-status/${vaPenTestId}/${status}`


                    }
                },
            }
        });
    </script>
    <script>
        const severityStatus = @json($severityStatus);
        const vaPenTestId = @json($vaPenTestId);
        const vaPenTestName = @json($vaPenTestName);

        const ctx = document.getElementById("severityChart").getContext("2d");

        const chartBar = new Chart(ctx, {
            type: "bar",
            data: {
                labels: [vaPenTestName],
                datasets: [
                    {
                        label: 'Critical',
                        backgroundColor: "#C00000",
                        data: [{
                            y: severityStatus.critical_findings,
                            level: 'Critical'
                        }],
                    },
                    {
                        label: 'High',
                        backgroundColor: "#FF0000",
                        data: [{
                            y: severityStatus.high_findings,
                            level: 'High'
                        }],
                    },
                    {
                        label: 'Medium',
                        backgroundColor: "#FFC000",
                        data: [{
                            y: severityStatus.medium_findings,
                            level: 'Medium'
                        }],
                    },
                    {
                        label: 'Low',
                        backgroundColor: "#FFE599",
                        data: [{
                            y: severityStatus.low_findings,
                            level: 'Low'
                        }],
                    }
                ]
            },
            options: {
                legend: {
                    display: true
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            fontColor: '#000',
                        }
                    }]
                },
                onClick: function(event, elements) {
                    if (elements.length > 0) {
                        const element = chartBar.getElementAtEvent(event)[0];
                        if (element) {
                            const datasetIndex = element._datasetIndex;
                            const dataIndex = element._index;

                            const dataset = chartBar.data.datasets[datasetIndex];
                            if (dataset && dataset.data[dataIndex]) {
                                const dataPoint = dataset.data[dataIndex];
                                window.location.href = `/va-pen-test-level/${vaPenTestId}/${dataPoint.level}`


                            }
                        }
                    }
                },
                plugins: {
                    labels: false
                }
            }
        });
    </script>









</body>

</html>
